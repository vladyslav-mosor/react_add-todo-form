{"version":3,"sources":["App.tsx","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","index.tsx"],"names":["users","id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","visibleTodos","usersFromServer","userId","find","App","useState","userSelected","setUserSelected","userError","setUserError","titleError","setTitleError","setTitle","setTodos","action","method","onSubmit","event","preventDefault","currentUser","length","Math","max","prepareTodo","current","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fe5967e.chunk.js","sourcesContent":["import './App.scss';\nimport React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { FullTodo, Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { TodoList } from './components/TodoList';\n\nconst prepareTodos = (\n  users: User[],\n  todos: Todo[],\n): FullTodo[] => (\n  todos.map((todo) => ({\n    ...todo,\n    user: users.find((user) => user.id === todo.userId) || null,\n  }))\n);\n\nconst prepareTodo = (\n  currentUser: User,\n  title: string,\n  todos: Todo[],\n): FullTodo => {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return ({\n    id: maxId + 1,\n    title,\n    completed: false,\n    userId: currentUser.id,\n    user: currentUser,\n  });\n};\n\nconst visibleTodos = prepareTodos(usersFromServer, todosFromServer);\nconst users = usersFromServer;\n\nexport const App: React.FC = () => {\n  const [userSelected, setUserSelected] = useState('0');\n  const [userError, setUserError] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState(visibleTodos);\n\n  const handleChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserError(false);\n    const { value } = event.target;\n\n    setUserSelected(value);\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitleError(false);\n    const { value } = event.target;\n\n    setTitle(value);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setUserSelected('0');\n  };\n\n  const handleAddTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const currentUser = users\n      .find(user => user.name === userSelected) || null;\n\n    if (!currentUser) {\n      setUserError(true);\n    }\n\n    if (!title.length) {\n      setTitleError(true);\n    }\n\n    if (currentUser && title) {\n      const todo = prepareTodo(currentUser, title, visibleTodos);\n\n      setTodos(current => ([\n        ...current,\n        todo,\n      ]));\n\n      resetForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Add todo form</h1>\n\n      <form\n        className=\"form\"\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAddTodo}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              className=\"field__input\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleChangeTitle}\n            />\n          </label>\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              className=\"field__input\"\n              data-cy=\"userSelect\"\n              value={userSelected}\n              onChange={handleChangeSelect}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {users.map((user) => (\n                <option value={user.name} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          className=\"add-button\"\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './UserInfo.scss';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import './TodoInfo.scss';\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport { FullTodo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: FullTodo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FullTodo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: FullTodo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}